apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-world
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: hello-world.workshop.msb.com
      http:
        paths:
          - path: /
            backend:
              serviceName: hello-world
              servicePort: http
  tls:
  - hosts:
    - hello-world.workshop.msb.com
    secretName: hello-world-workshop-msb-com
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: http
  type: ClusterIP
  selector:
    app: hello-world
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
spec:
  selector:
    matchLabels:
      app: hello-world
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: hello-world
          image: registry.workshop.msb.com/msb/hello-world:1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: FOR_GODS_SAKE_PLEASE_REDEPLOY
              value: 'THIS_STRING_IS_REPLACED_DURING_BUILD'
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 4
            httpGet:
              path: /health
              port: http
          livenessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 4
            httpGet:
              path: /health
              port: http
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "100m"
      restartPolicy: Always
