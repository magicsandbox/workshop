apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  labels:
     app: cassandra
spec:
  serviceName: cassandra
  replicas: 3 # starting off with a small cluster of 3 nodes
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      affinity:
        podAntiAffinity:
          # The following sections are two examples of using anti pod affinity.
          # The uncommented section is enabled, or you can use the other example.
          # Both cannot be used at the same time, and thus the required rule.
          # is commented out.
          #
          # This is using pod anti-affinity to ensure that the scheduler tries
          # it best to spread pods
          # see https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity-beta-feature)
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cassandra
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 1800
      containers:
      - name: cassandra
        image: gcr.io/pso-examples/cassandra:3.11.4-v8
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "1024m"
            memory: 1Gi
          requests:
           cpu: "1024m"
           memory: 1Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        # this is still needs improvement for Cassandra
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0.cassandra.default.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          # we are using the downward api to allow the pod get the correct
          # IP address.
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command: [ "/bin/sh", "-c", "/usr/local/apache-cassandra/bin/nodetool status" ]
          initialDelaySeconds: 90
          periodSeconds: 30
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
